?bin
?bind
matplot(unique(df$year), c(df[df$id == 1, 'dep'], pred), type = 'l', col = 1:3)
model <- lm(dep ~ indep.a + indep.b + year, data = df[df$id == 1, ])
pred <- predict(model, year = 2017:2020)
matplot(unique(df$year), c(df[df$id == 1, 'dep'], pred), type = 'l', col = 1:3)
c(df[df$id == 1, 'dep'], pred)
df <- TimeSer(6, 2010:2016, rnorm(6,1e5, 1e5))
names(df)[3] <- 'dep'
n <- .9
df$indep.a <- df$dep * runif(nrow(df), 1-n, 1+n)
df$indep.b <- df$dep * runif(nrow(df), 1-n, 1+n)
matplot(unique(df$year), c(df[df$id == 1, 'dep'], pred), type = 'l', col = 1:3)
matplot(c(unique(df$year), 2017:2020), c(df[df$id == 1, 'dep'], pred), type = 'l', col = 1:3)
c(unique(df$year), 2017:2020)
c(df[df$id == 1, 'dep'], pred)
pred
predict(model, year = 2017:2020)
predict(model, year = 2017:2030)
predict(model, year)
predict(model)
?predict
predict(model, newdate = 2017:2020)
model <- lm(dep ~ year, data = df[df$id == 1, ])
pred <- predict(model, year = 2017:2020)
matplot(c(unique(df$year), 2017:2020), c(df[df$id == 1, 'dep'], pred), type = 'l', col = 1:3)
pred
df <- rbind(df,
data.frame(id = rep(df$id, len = length(unique(df$id)) * length(2017:2020)),
year = rep(2017:2020, times = length(unique(df$id))),
dep = NA, indep.a = NA, indep.b = NA)
)
predict(model, year = df)
df
df <- TimeSer(6, 2010:2016, rnorm(6,1e5, 1e5))
names(df)[3] <- 'dep'
n <- .9
df$indep.a <- df$dep * runif(nrow(df), 1-n, 1+n)
df$indep.b <- df$dep * runif(nrow(df), 1-n, 1+n)
df <- rbind(df,
data.frame(id = rep(df$id, len = length(unique(df$id)) * length(2017:2020)),
year = rep(2017:2020, each = length(unique(df$id))),
dep = NA, indep.a = NA, indep.b = NA)
)
predict(model, year = df)
model <- lm(dep ~ year, data = df[df$id == 1, ])
predict(model, year = df)
c
plot(line(pred))
pred <- predict(model, year = df)
plot(line(pred))
plot(pred))
plot(pred)
model <- lm(dep ~ year, data = df[df$id == 2, ])
predict(model, year = df)
predict(model, year = 2012)
predict(model, year = 2018)
predict(model, newdata = data.frame(year = 2017:2018))
predict(model, newata = data.frame(year = 2017:2018))
predict(model, newdata = data.frame(year = 2017:2018))
predict(model, newdata = data.frame(year = 2017:2020))
model <- lm(dep ~ year, data = df[df$id == 1, ])
pred <- predict(model, newdata = data.frame(year = 2017:2020))
matplot(c(unique(df$year), 2017:2020), c(df[df$id == 1, 'dep'], pred), type = 'l', col = 1:3)
c(df[df$id == 1, 'dep'], pred)
df <- TimeSer(6, 2010:2016, rnorm(6,1e5, 1e5))
names(df)[3] <- 'dep'
n <- .9
df$indep.a <- df$dep * runif(nrow(df), 1-n, 1+n)
df$indep.b <- df$dep * runif(nrow(df), 1-n, 1+n)
##------
model <- lm(dep ~ year, data = df[df$id == 1, ])
pred <- predict(model, newdata = data.frame(year = 2017:2020))
matplot(c(unique(df$year), 2017:2020), c(df[df$id == 1, 'dep'], pred), type = 'l', col = 1:3)
model <- lm(dep ~ year, data = df[df$id == 2, ])
pred <- predict(model, newdata = data.frame(year = 2017:2020))
matplot(c(unique(df$year), 2017:2020), c(df[df$id == 2, 'dep'], pred), type = 'l', col = 1:3)
model <- lm(dep ~ year, data = df[df$id == 4, ])
pred <- predict(model, newdata = data.frame(year = 2017:2020))
matplot(c(unique(df$year), 2017:2020), c(df[df$id == 4, 'dep'], pred), type = 'l', col = 1:3)
model <- lm(dep ~ year, data = df[df$id == 5, ])
pred <- predict(model, newdata = data.frame(year = 2017:2020))
matplot(c(unique(df$year), 2017:2020), c(df[df$id == 5, 'dep'], pred), type = 'l', col = 1:3)
pred <- predict(model, newdata = data.frame(year = 2017:2020), interval = prediction)
pred <- predict(model, newdata = data.frame(year = 2017:2020), interval = 'prediction')
pred
matplot(unique(df$year), df[df$id == x, 3:5], type = 'o', col = 1:3)
lapply(df$id, function(x) {
matplot(unique(df$year), df[df$id == x, 3:5], type = 'o', col = 1:3)
})
TimeSer <- function(num.id, years, init.val) {
df <- data.frame(id = factor(rep(1:num.id, length(years))),
year = rep(years, each = num.id))
yrs <- length(years) - 1
minim <- seq(-.1, by = -.1, len = yrs)
maxim <- seq(.2, by = .1, len = yrs)
val <- list(init.val)
for (i in 1:yrs) {
val[[i + 1]] <- unlist(lapply(val[i], function (x) {
x + x * runif(num.id, minim[i], maxim[i])
}))
}
df$val <- unlist(val)
df
}
df <- TimeSer(6, 2010:2016, rnorm(6,1e5, 1e5))
names(df)[3] <- 'dep'
n <- .9
df$indep.a <- df$dep * runif(nrow(df), 1-n, 1+n)
df$indep.b <- df$dep * runif(nrow(df), 1-n, 1+n)
par(mfrow=c(2, length(unique(df$id))/2))
lapply(df$id, function(x) {
matplot(unique(df$year), df[df$id == x, 3:5], type = 'o', col = 1:3)
})
df
df[df$id == 1]
df[df$id == 1, ]
df[df$id == 1, -1]
df[df$id == 2, -1]
matplot(unique(df$year), df[df$id == 2, -1], type = 'o', col = 1:3)
matplot(unique(df$year), df[df$id == 2, -1], type = 'l', col = 1:3)
matplot(c(unique(df$year), 2017:2020), df[df$id == 2, -1], type = 'l', col = 1:3)
data.frame(id = rep(df$id, len = length(unique(df$id)) * length(2017:2020)),
year = rep(2017:2020, each = length(unique(df$id))),
dep = NA, indep.a = NA, indep.b = NA)
data.frame(year = rep(2017:2020),
dep = NA, indep.a = NA, indep.b = NA)
ars <- rbind(df[df$id == 2, -1], data.frame(year = rep(2017:2020),
dep = NA, indep.a = NA, indep.b = NA))
ars
read.table(text =
year      dep   indep.a  indep.b
2010 144467.5 201955.26 186860.4
2011 158447.2 103408.10  30835.7
2012 135052.4  78146.43 209252.4
2013 115852.3 202032.60 128924.2
2014 143728.1 108864.75 265002.5
2015 203038.1  94722.31 353931.7
2016 235329.6  52244.40 199649.1
2017       NA        NA       NA
2018       NA        NA       NA
2019       NA        NA       NA
2020       NA        NA       NA, header = T)
read.table(text =
year      dep   indep.a  indep.b
2010 144467.5 201955.26 186860.4
2011 158447.2 103408.10  30835.7
2012 135052.4  78146.43 209252.4
2013 115852.3 202032.60 128924.2
2014 143728.1 108864.75 265002.5
2015 203038.1  94722.31 353931.7
2016 235329.6  52244.40 199649.1
2017       NA        NA       NA
2018       NA        NA       NA
2019       NA        NA       NA
2020       NA        NA       NA, header = T)
read.table(text = "
year      dep   indep.a  indep.b
2010 144467.5 201955.26 186860.4
2011 158447.2 103408.10  30835.7
2012 135052.4  78146.43 209252.4
2013 115852.3 202032.60 128924.2
2014 143728.1 108864.75 265002.5
2015 203038.1  94722.31 353931.7
2016 235329.6  52244.40 199649.1
2017       NA        NA       NA
2018       NA        NA       NA
2019       NA        NA       NA
2020       NA        NA       NA", header = T)
matplot(unique(df$year), df[c('dep', 'indep.a', 'indep.b')], type = 'o', col = 1:3)
df[c('dep', 'indep.a', 'indep.b')]
df <- read.table(text = "
year      dep   indep.a  indep.b
2010 144467.5 201955.26 186860.4
2011 158447.2 103408.10  30835.7
2012 135052.4  78146.43 209252.4
2013 115852.3 202032.60 128924.2
2014 143728.1 108864.75 265002.5
2015 203038.1  94722.31 353931.7
2016 235329.6  52244.40 199649.1
2017       NA        NA       NA
2018       NA        NA       NA
2019       NA        NA       NA
2020       NA        NA       NA", header = T)
matplot(unique(df$year), df[c('dep', 'indep.a', 'indep.b')], type = 'o', col = 1:3)
2, length(unique(df$id))/2
par(mfrow=c(1,1))
matplot(unique(df$year), df[c('dep', 'indep.a', 'indep.b')], type = 'o', col = 1:3)
matplot(unique(df$year), df[c('dep', 'indep.a', 'indep.b')], type = 'r', col = 1:3)
?matplot
matplot(unique(df$year), df[c('dep', 'indep.a', 'indep.b')], type = 'b', col = 1:3)
matplot(unique(df$year), df[c('dep', 'indep.a', 'indep.b')], type = 'h', col = 1:3)
matplot(unique(df$year), df[c('dep', 'indep.a', 'indep.b')], type = 's', col = 1:3)
matplot(unique(df$year), df[c('dep', 'indep.a', 'indep.b')], type = 'c', col = 1:3)
matplot(unique(df$year), df[c('dep', 'indep.a', 'indep.b')], type = 'p', col = 1:3)
matplot(unique(df$year), df[c('dep', 'indep.a', 'indep.b')], type = 'l', col = 1:3)
matplot(unique(df$year), df[c('dep', 'indep.a', 'indep.b')],
type = 'l', col = 1:3, legend = names(df[3:5]))
matplot(unique(df$year), df[c('dep', 'indep.a', 'indep.b')],
type = 'l', col = 1:3, legend = names(df)[3:5])
names(df)[3:5]
matplot(unique(df$year), df[c('dep', 'indep.a', 'indep.b')],
type = 'l', col = 1:3, legend = names(df)[2:4])
legend = names(df)[2:4]
warnings()
legend(names(df)[2:4])
?legend
legend('topright', names(df)[2:4])
legend('topright', names(df)[2:4], col = 1:3)
warnings()
matplot(unique(df$year), df[c('dep', 'indep.a', 'indep.b')],
type = 'l', col = 1:3)
legend('topright', names(df)[2:4], col = 1:3)
matplot(unique(df$year), df[c('dep', 'indep.a', 'indep.b')],
type = 'l', col = c('black','red','blue'))
legend('topright', names(df)[2:4], col =c('black','red','blue'))
legend('topright', names(df)[2:4], col =c('black','red','blue'))
legend('topright', names(df)[2:4], col = c('black','red','blue'))
legend('topright', names(df)[2:4], lty = 1, col = 1:3)
matplot(unique(df$year), df[c('dep', 'indep.a', 'indep.b')],
type = 'l', col = 1:3)
legend('topright', names(df)[2:4], lty = 1, col = 1:3)
cor(df)
cor(df, use = 'complete.cases')
cor(df, use = 'complete.obs')
df <- read.table(text = "
year      dep   indep.a  indep.b
2010 144467.5 201955.26 186860.4
2011 158447.2 103408.10  30835.7
2012 135052.4  78146.43 209252.4
2013 115852.3 202032.60 128924.2
2014 143728.1 108864.75 265002.5
2015 203038.1  94722.31 353931.7
2016 235329.6  52244.40 199649.1
2017       NA        NA       NA
2018       NA        NA       NA
2019       NA        NA       NA
2020       NA        NA       NA", header = T)
cor(df, use = 'complete.obs')
matplot(unique(df$year), df[c('dep', 'indep.a', 'indep.b')], type = 'l', col = 1:3)
legend('topright', names(df)[2:4], lty = 1, col = 1:3)
matplot(unique(df$year), df[c('dep', 'indep.a', 'indep.b')], type = 'l', col = 1:3, asp = c(2,3))
matplot(unique(df$year), df[c('dep', 'indep.a', 'indep.b')], type = 'l', col = 1:3, asp = c(2,3))
?plot
matplot(unique(df$year), df[c('dep', 'indep.a', 'indep.b')], type = 'l', col = 1:3, asp = 2:3)
matplot(unique(df$year), df[c('dep', 'indep.a', 'indep.b')], type = 'l', col = 1:3)
legend('topright', names(df)[2:4], lty = 1, col = 1:3)
?window
TimeSer <- function(num.id, years, init.val) {
df <- data.frame(id = factor(rep(1:num.id, length(years))),
year = rep(years, each = num.id))
yrs <- length(years) - 1
minim <- seq(-.1, by = -.1, len = yrs)
maxim <- seq(.2, by = .1, len = yrs)
val <- list(init.val)
for (i in 1:yrs) {
val[[i + 1]] <- unlist(lapply(val[i], function (x) {
x + x * runif(num.id, minim[i], maxim[i])
}))
}
df$val <- unlist(val)
df
}
df <- TimeSer(6, 2010:2016, rnorm(6,1e5, 1e5))
names(df)[3] <- 'dep'
n <- .9
df$indep.a <- df$dep * runif(nrow(df), 1-n, 1+n)
df$indep.b <- df$dep * runif(nrow(df), 1-n, 1+n)
df <- rbind(df,
data.frame(id = rep(df$id, len = length(unique(df$id)) * length(2017:2020)),
year = rep(2017:2020, each = length(unique(df$id))),
dep = NA, indep.a = NA, indep.b = NA)
)
model <- lm(dep ~ year, data = df[df$id == 5, ])
pred <- predict(model, newdata = data.frame(year = 2017:2020), interval = 'prediction')
matplot(c(unique(df$year), 2017:2020), c(df[df$id == 5, 'dep'], pred$fit), type = 'l', col = 1:3)#
TimeSer <- function(num.id, years, init.val) {
df <- data.frame(id = factor(rep(1:num.id, length(years))),
year = rep(years, each = num.id))
yrs <- length(years) - 1
minim <- seq(-.1, by = -.1, len = yrs)
maxim <- seq(.2, by = .1, len = yrs)
val <- list(init.val)
for (i in 1:yrs) {
val[[i + 1]] <- unlist(lapply(val[i], function (x) {
x + x * runif(num.id, minim[i], maxim[i])
}))
}
df$val <- unlist(val)
df
}
df <- TimeSer(6, 2010:2016, rnorm(6,1e5, 1e5))
names(df)[3] <- 'dep'
n <- .9
df$indep.a <- df$dep * runif(nrow(df), 1-n, 1+n)
df$indep.b <- df$dep * runif(nrow(df), 1-n, 1+n)
model <- lm(dep ~ year, data = df[df$id == 5, ])
pred <- predict(model, newdata = data.frame(year = 2017:2020), interval = 'prediction')
matplot(c(unique(df$year), 2017:2020), c(df[df$id == 5, 'dep'], pred$fit), type = 'l', col = 1:3)#
par(mfrow=c(2, length(unique(df$id))/2))
lapply(df$id, function(x) {
matplot(unique(df$year), df[df$id == x, 3:5], type = 'o', col = 1:3)
})
model <- lm(dep ~ year, data = df[df$id == 5, ])
pred <- predict(model, newdata = data.frame(year = 2017:2020), interval = 'prediction')
matplot(c(unique(df$year), 2017:2020), c(df[df$id == 5, 'dep'], pred$fit), type = 'l', col = 1:3)#
pred
pred$fit
pred[,1]
model <- lm(dep ~ year, data = df[df$id == 5, ])
pred <- predict(model, newdata = data.frame(year = 2017:2020))
par(mfrow=c(1, 1))
matplot(c(unique(df$year), 2017:2020), c(df[df$id == 5, 'dep'], pred$fit), type = 'l', col = 1:3)#
model <- lm(dep ~ year, data = df[df$id == 5, ])
pred <- predict(model, newdata = data.frame(year = 2017:2020))
par(mfrow=c(1, 1))
matplot(c(unique(df$year), 2017:2020), c(df[df$id == 5, 'dep'], pred), type = 'l', col = 1:3)#
model <- lm(dep ~ indep.a + indeg.b + year + id, data = df)
model <- lm(dep ~ indep.a + indep.b + year + id, data = df)
pred <- predict(model, newdata = data.frame(year = 2017:2020))
?arima
?auto.arima
model <- arima(dep ~ year, data = df[df$id == 5, ])
model <- arima(dep ~ year, data = df[df$id == 5, ])
model <- arima(dep$df[df$id == 5, ])
dep$df[df$id == 5, ]
model <- arima(df$dep[df$id == 5, ])
df$dep[df$id == 5, ]
df$dep[df$id == 5]
model <- arima(df$dep[df$id == 5])
pred <- predict(model, newdata = data.frame(year = 2017:2020))
matplot(c(unique(df$year), 2017:2020), c(df[df$id == 5, 'dep'], pred), type = 'l', col = 1:3)
model
summary(model)
pred <- predict(model)
pred
pred <- predict(model, newdata = 9:10)
pred
?pred.arima
?pred.lm
?predict.lm
?predict.arima
TimeSer <- function(num.id, years, init.val) {
df <- data.frame(id = factor(rep(1:num.id, length(years))),
year = rep(years, each = num.id))
yrs <- length(years) - 1
minim <- seq(-.1, by = -.1, len = yrs)
maxim <- seq(.2, by = .1, len = yrs)
val <- list(init.val)
for (i in 1:yrs) {
val[[i + 1]] <- unlist(lapply(val[i], function (x) {
x + x * runif(num.id, minim[i], maxim[i])
}))
}
df$val <- unlist(val)
df
}
df <- TimeSer(6, 2010:2016, rnorm(6,1e5, 1e5))
names(df)[3] <- 'dep'
n <- .9
df$indep.a <- df$dep * runif(nrow(df), 1-n, 1+n)
df$indep.b <- df$dep * runif(nrow(df), 1-n, 1+n)
df <- rbind(df,
data.frame(id = rep(df$id, len = length(unique(df$id)) * length(2017:2020)),
year = rep(2017:2020, each = length(unique(df$id))),
dep = NA, indep.a = NA, indep.b = NA)
)
par(mfrow=c(2, length(unique(df$id))/2))
lapply(df$id, function(x) {
matplot(unique(df$year), df[df$id == x, 3:5], type = 'o', col = 1:3)
})
matplot(unique(df$year), df[df$id == x, 3:5], type = 'l', col = 1:3)
lapply(df$id, function(x) {
matplot(unique(df$year), df[df$id == x, 3:5], type = 'l', col = 1:3)
})
install.packages('vars')
library('vars')
## Katseandmete tekitamine
TimeSer <- function(num.id, years, init.val) {
df <- data.frame(id = factor(rep(1:num.id, length(years))),
year = rep(years, each = num.id))
yrs <- length(years) - 1
minim <- seq(-.1, by = -.1, len = yrs)
maxim <- seq(.2, by = .1, len = yrs)
val <- list(init.val)
for (i in 1:yrs) {
val[[i + 1]] <- unlist(lapply(val[i], function (x) {
x + x * runif(num.id, minim[i], maxim[i])
}))
}
df$val <- unlist(val)
df
}
df <- TimeSer(6, 2010:2016, rnorm(6,1e5, 1e5))
names(df)[3] <- 'dep'
n <- .9
df$indep.a <- df$dep * runif(nrow(df), 1-n, 1+n)
df$indep.b <- df$dep * runif(nrow(df), 1-n, 1+n)
df <- rbind(df,
data.frame(id = rep(df$id, len = length(unique(df$id)) * length(2017:2020)),
year = rep(2017:2020, each = length(unique(df$id))),
dep = NA, indep.a = NA, indep.b = NA)
)
VAR(df[df$id == 1, -1], p = 1, type = 'both')
TimeSer <- function(num.id, years, init.val) {
df <- data.frame(id = factor(rep(1:num.id, length(years))),
year = rep(years, each = num.id))
yrs <- length(years) - 1
minim <- seq(-.1, by = -.1, len = yrs)
maxim <- seq(.2, by = .1, len = yrs)
val <- list(init.val)
for (i in 1:yrs) {
val[[i + 1]] <- unlist(lapply(val[i], function (x) {
x + x * runif(num.id, minim[i], maxim[i])
}))
}
df$val <- unlist(val)
df
}
df <- TimeSer(6, 2010:2016, rnorm(6,1e5, 1e5))
names(df)[3] <- 'dep'
n <- .9
df$indep.a <- df$dep * runif(nrow(df), 1-n, 1+n)
df$indep.b <- df$dep * runif(nrow(df), 1-n, 1+n)
VAR(df[df$id == 1, -1], p = 1, type = 'both')
setwd('C:/Users/lillemets/Dropbox/work/mullakaart')
library('dplyr');library('extrafont');library('ggplot2');library('raster');library('mapproj');library('openxlsx');library('gridExtra')
load('mullakaart.Rda')
ls()
pay
wb <- createWorkbook()
writeData(wb, sheet = 1, pay, colNames = F)
wb <- createWorkbook()
writeData(wb, sheet = 1, pay, colNames = F)
wb <- createWorkbook()
addWorksheet(wb, "Payments per hectare (€/ha)")
writeData(wb, sheet = 1, pay, colNames = F)
saveWorkbook(wb, file = 'Andmed kaartidel.xlsx', overwrite = T)
setwd('C:/Users/lillemets/Dropbox/work/mullakaart')
library('dplyr');library('extrafont');library('ggplot2');library('raster');library('mapproj');library('openxlsx');library('gridExtra')
Sys.getenv("PATH")
installr::install.rtools()
find.packages('rtools')
find.package('rtools')
Sys.getenv("R_ZIPCMD", "zip")
Sys.getenv("PATH")
install.packages('installr')
install.packages('installr')
installr::install.rtools()
wb <- createWorkbook()
addWorksheet(wb, "Payments per hectare (€/ha)")
writeData(wb, sheet = 1, pay, colNames = F)
addWorksheet(wb, "Cereal yield per UAA (kg/ha)")
writeData(wb, sheet = 2, yld, colNames = F)
saveWorkbook(wb, file = 'Andmed kaartidel.xlsx', overwrite = T)
Sys.getenv("PATH")
saveWorkbook(wb, file = 'Andmed kaartidel.xlsx', overwrite = T)
wb
getTables(wb)
getTables(wb,sheet = 1)
readWorkbook(wb)
readWorkbook(wb, 2)
Sys.getenv("PATH")
Sys.getenv("R_ZIPCMD", "zip")
Sys.getenv("PATH")
Sys.setenv("R_ZIPCMD" = "path/to/zip.exe")
saveWorkbook(wb, file = 'Andmed kaartidel.xlsx', overwrite = T)
Sys.getenv("PATH")
Sys.setenv("R_ZIPCMD" = "path/to/zip.exe")
Sys.setenv(R_ZIPCMD= "C:/Rtools/bin/zip")
saveWorkbook(wb, file = 'Andmed kaartidel.xlsx', overwrite = T)
Sys.getenv("PATH")
Sys.getenv("R_ZIPCMD", "zip")
saveWorkbook(wb, file = 'Andmed kaartidel.xlsx', overwrite = T)
Sys.setenv(R_ZIPCMD= "C:\Program Files (x86)\Rtools\bin")
Sys.setenv(R_ZIPCMD= "C:/Program Files (x86)/Rtools/bin")
saveWorkbook(wb, file = 'Andmed kaartidel.xlsx', overwrite = T)
Sys.getenv("PATH")
Sys.getenv("PATH")
Sys.setenv(R_ZIPCMD= "C://Program Files (x86)/Rtools/bin")
saveWorkbook(wb, file = 'Andmed kaartidel.xlsx', overwrite = T)
Sys.setenv(R_ZIPCMD= "C:\\Program Files (x86)\\Rtools\\bin")
Sys.getenv("PATH")
saveWorkbook(wb, file = 'Andmed kaartidel.xlsx', overwrite = T)
Sys.setenv(R_ZIPCMD= "C:\\Program Files (x86)\\Rtools\\bin")
Sys.getenv("PATH")
Sys.setenv(R_ZIPCMD= "C:\\Program Files (x86)\\Rtools\\bin")
Sys.setenv(R_ZIPCMD = "C:\\Program Files (x86)\\Rtools\\bin")
Sys.getenv("R_ZIPCMD", "zip")
saveWorkbook(wb, file = 'Andmed kaartidel.xlsx', overwrite = T)
Sys.setenv(R_ZIPCMD = "C:\\Program Files (x86)\\Rtools\\bin\\bin.exe")
saveWorkbook(wb, file = 'Andmed kaartidel.xlsx', overwrite = T)
saveWorkbook(wb, file = 'Andmed kaartidel.xlsx', overwrite = T)
Sys.setenv(R_ZIPCMD = "C:\\Program Files (x86)\\Rtools\\bin\\zip.exe")
saveWorkbook(wb, file = 'Andmed kaartidel.xlsx', overwrite = T)
wb <- createWorkbook()
addWorksheet(wb, "Payments per hectare (€/ha)")
writeData(wb, sheet = 1, pay, colNames = F)
addWorksheet(wb, "Cereal yield per UAA (kg/ha)")
writeData(wb, sheet = 2, yld, colNames = F)
saveWorkbook(wb, file = 'Andmed kaartidel.xlsx', overwrite = T)
?saveWorkbook
wb <- createWorkbook()
addWorksheet(wb, "Payments per hectare (€/ha)")
writeDataTable(wb, sheet = 1, pay, colNames = F)
addWorksheet(wb, "Cereal yield per UAA (kg/ha)")
writeDataTable(wb, sheet = 2, yld, colNames = F)
saveWorkbook(wb, file = 'Andmed kaartidel.xlsx', overwrite = T)
?write.xlsx
write.xlsx(wb, file = 'Andmed kaartidel.xlsx', overwrite = T)
write.xlsx(pay, file = 'Andmed kaartidel.xlsx', overwrite = T)
saveWorkbook(wb, file = 'Andmed kaartidel.xlsx', overwrite = T)
